name: CI (Cabal)

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
    types: [opened, synchronize]
  pull_request_review:
    branches: [master]
    types: [submitted]

jobs:
  build:
    name: Testing with GHC-${{ matrix.ghc }}, on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # Windows builds randomly fail
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        ghc: ["8.10.7", "9.2.5", "9.4.4"]
        exclude:
        # https://github.com/haskell/actions/issues/129
        - os: windows-latest
          ghc: "9.4.4"
        - os: windows-latest
          ghc: "9.2.5"
    env:
      CONFIG: "--enable-tests --enable-benchmarks"
    steps:
    - uses: actions/checkout@v2
    - uses: haskell/actions/setup@v1
      id: setup-haskell-cabal
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: 'latest'
    - name: Update dependencies
      run: cabal v2-update $CONFIG
    - name: Freeze dependencies
      run: cabal freeze $CONFIG
    - name: Cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
        key: cabal-cache-v2-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}-${{ hashFiles('hindent.cabal') }}
        restore-keys: |
          cabal-cache-v2-${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}-
          cabal-cache-v2-${{ runner.os }}-${{ matrix.ghc }}-
          cabal-cache-v2-${{ runner.os }}-
    - name: Build
      run: cabal v2-build $CONFIG
      if: matrix.os != 'macOS-latest' || matrix.ghc != '9.2.2'
      # See https://gitlab.haskell.org/ghc/ghc/-/issues/20592#note_391266 for the problem and workaround.
      # This problem is fixed in GHC 9.2.3.
    - name: Build with a workaround for macOS
      run: C_INCLUDE_PATH="`xcrun --show-sdk-path`/usr/include/ffi" cabal v2-build $CONFIG
      if: matrix.os == 'macOS-latest' && matrix.ghc == '9.2.2'
    - name: Run tests
      run: cabal v2-test $CONFIG
    - name: Run benchmarks
      run: cabal v2-bench $CONFIG
    - name: Generate documentation
      run: cabal v2-haddock $CONFIG
    - name: Generate tarball
      run: cabal v2-sdist
